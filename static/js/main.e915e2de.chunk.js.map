{"version":3,"sources":["types/SortBy.tsx","components/Buttons/Buttons.tsx","components/Products/Products.tsx","App.tsx","index.tsx"],"names":["SortBy","Buttons","sortField","setSortField","isReversed","setIsReversed","reset","className","type","cn","alphabet","onClick","length","Products","goods","map","x","goodsFromServer","App","useState","sort","a","b","localeCompare","reverse","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,oDAAAA,K,oBAAAA,E,iBAAAA,M,gCCWCC,EAA2B,SAAC,GAAD,IACtCC,EADsC,EACtCA,UACAC,EAFsC,EAEtCA,aACAC,EAHsC,EAGtCA,WACAC,EAJsC,EAItCA,cACAC,EALsC,EAKtCA,MALsC,OAOtC,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYP,IAAcF,EAAOU,WAErCC,QAAS,kBAAMR,EAAaH,EAAOU,WANrC,iCAWA,wBACEF,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYP,IAAcF,EAAOY,SAErCD,QAAS,kBAAMR,EAAaH,EAAOY,SANrC,4BAWA,wBACEJ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaL,IAEjBO,QAAS,kBAAMN,GAAeD,IANhC,sBAWEF,GAAaE,IACb,mCACE,wBACEI,KAAK,SACLD,UAAU,4BACVI,QAASL,EAHX,yBCjDKO,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAAoBA,YCFfC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOjB,EAAP,KAAkBC,EAAlB,KACA,EAAoCgB,oBAAS,GAA7C,mBAAOf,EAAP,KAAmBC,EAAnB,KACMS,EAAe,UAAOG,GAExBf,GACFY,EAAMM,MAAK,SAACC,EAAWC,GACrB,OAAQpB,GACN,KAAKF,EAAOU,SACV,OAAOW,EAAEE,cAAcD,GAEzB,KAAKtB,EAAOY,OACV,OAAOS,EAAET,OAASU,EAAEV,OAEtB,QACE,OAAO,MAKXR,GACFU,EAAMU,UAQR,OACE,sBAAKjB,UAAU,kBAAf,UACE,cAAC,EAAD,CACEL,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,EACfC,MAZQ,WACZH,EAAa,IACbE,GAAc,MAaZ,cAAC,EAAD,CACES,MAAOA,QCzDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e915e2de.chunk.js","sourcesContent":["export enum SortBy {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { SortBy } from '../../types/SortBy';\n\ninterface Props {\n  sortField: string,\n  setSortField: (SortBy: string) => void,\n  isReversed: boolean,\n  setIsReversed: (isReversed: boolean) => void\n  reset: () => void\n}\nexport const Buttons: React.FC<Props> = ({\n  sortField,\n  setSortField,\n  isReversed,\n  setIsReversed,\n  reset,\n}) => (\n  <div className=\"buttons\">\n    <button\n      type=\"button\"\n      className={cn(\n        'button is-info',\n        { 'is-light': sortField !== SortBy.alphabet },\n      )}\n      onClick={() => setSortField(SortBy.alphabet)}\n    >\n      Sort alphabetically\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn(\n        'button is-success',\n        { 'is-light': sortField !== SortBy.length },\n      )}\n      onClick={() => setSortField(SortBy.length)}\n    >\n      Sort by length\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn(\n        'button is-warning',\n        { 'is-light': !isReversed },\n      )}\n      onClick={() => setIsReversed(!isReversed)}\n    >\n      Reverse\n    </button>\n\n    {(sortField || isReversed) && (\n      <>\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </>\n    )}\n  </div>\n);\n","import React from 'react';\n\ninterface Props {\n  goods: string[]\n}\nexport const Products: React.FC<Props> = ({ goods }) => (\n  <ul>\n    <ul>\n      {goods.map((x: string) => (\n        <li data-cy=\"Good\">{x}</li>\n      ))}\n    </ul>\n  </ul>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { SortBy } from './types/SortBy';\nimport { Buttons } from './components/Buttons';\nimport { Products } from './components/Products/Products';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const goods: string[] = [...goodsFromServer];\n\n  if (sortField) {\n    goods.sort((a: string, b: string) => {\n      switch (sortField) {\n        case SortBy.alphabet:\n          return a.localeCompare(b);\n\n        case SortBy.length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortField={sortField}\n        setSortField={setSortField}\n        isReversed={isReversed}\n        setIsReversed={setIsReversed}\n        reset={reset}\n      />\n\n      <Products\n        goods={goods}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}